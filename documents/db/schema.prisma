generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters", "metrics"]
  binaryTargets   = ["native", "debian-openssl-3.0.x"]
  output          = "./client"
}

datasource db {
  provider = "postgresql"
  url      = env("DOCUMENTS_DATABASE_URL")
}

generator typescriptInterfaces {
  provider      = "prisma-generator-typescript-interfaces"
  modelType     = "type"
  enumType      = "object"
  headerComment = "DO NOT EDIT — Auto-generated file; see https://github.com/mogzol/prisma-generator-typescript-interfaces"
  modelSuffix   = "Model"
  output        = "./models/canonical.ts"
  prettier      = true
}

generator typescriptInterfacesJson {
  provider      = "prisma-generator-typescript-interfaces"
  modelType     = "type"
  enumType      = "stringUnion"
  headerComment = "DO NOT EDIT — Auto-generated file; see https://github.com/mogzol/prisma-generator-typescript-interfaces"
  output        = "./models/serialized.ts"
  modelSuffix   = "Dto"
  dateType      = "string"
  bigIntType    = "string"
  decimalType   = "string"
  bytesType     = "ArrayObject"
  prettier      = true
}

generator markdown {
  provider = "prisma-markdown"
  output   = "./docs/README.md"
  title    = "Documents Service Database Schema"
}

// Models related to documents processing and storage

model DocumentFile {
  id        String   @id @default(ulid())
  bucket    String
  key       String
  mimetype  String
  url       String?
  srcUrl    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Reference to TGov service's MeetingRecord
  meetingRecordId String?

  // Document metadata
  title       String?
  description String?
  fileSize    Int?
}
